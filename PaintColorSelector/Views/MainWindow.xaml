<Window x:Class="PaintColorSelector.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:PaintColorSelector.Views"
        xmlns:vm="clr-namespace:PaintColorSelector.ViewModels"
        Title="MainWindow"
        Width="525"
        Height="350">

    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--  Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう  -->
        <!--  Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります  -->
        <!--  Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています  -->

        <!--  WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </i:EventTrigger>

        <!--  Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </i:EventTrigger>

        <!--  WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください  -->

    </i:Interaction.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="80" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Menu x:Name="menu" Grid.ColumnSpan="2">
            <MenuItem Header="File">
                <MenuItem Header="Exit" />
            </MenuItem>
        </Menu>

        <Rectangle Grid.Row="1" Margin="5,5,5,0" Stroke="Black">
            <Rectangle.Fill>
                <!--  todo FindPaint.Value が null の時  -->
                <SolidColorBrush Color="{Binding FindPaint.Value.Color}" />
            </Rectangle.Fill>
        </Rectangle>
        <TextBlock Grid.Row="1" Grid.Column="1" Margin="5" Text="{Binding FindPaint.Value.ColorName}" />

        <Rectangle Grid.Row="2" Margin="5,0,5,5" Stroke="Black">
            <Rectangle.Fill>
                <!--  todo SelectedPaint.Value が null の時  -->
                <SolidColorBrush Color="{Binding SelectedPaint.Value.Color}" />
            </Rectangle.Fill>
        </Rectangle>
        <TextBlock Grid.Row="2" Grid.Column="1" Margin="5" Text="{Binding SelectedPaint.Value.ColorName}" />

        <StackPanel Grid.Row="3" Grid.ColumnSpan="2" Orientation="Horizontal">
            <TextBlock Margin="10,0,5,0" VerticalAlignment="Center" Text="大分類" />
            <ComboBox Width="120" Height="22" Margin="0,5" ItemsSource="{Binding MakerList}" SelectedItem="{Binding MakerFilterStr.Value}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <l:LivetCallMethodAction MethodName="FilterChanged" MethodTarget="{Binding}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <TextBlock Margin="10,0,5,0" VerticalAlignment="Center" Text="小分類" />
            <ComboBox Width="120" Height="22" Margin="0,5" ItemsSource="{Binding SeriesList}" SelectedItem="{Binding SeriesFilterStr.Value}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <l:LivetCallMethodAction MethodName="FilterChanged" MethodTarget="{Binding}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
        </StackPanel>

        <DataGrid Grid.Row="4"
                  Grid.ColumnSpan="2"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  ItemsSource="{Binding PaintList}"
                  SelectedItem="{Binding SelectedPaint.Value}"
                  SelectionMode="Single">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <l:LivetCallMethodAction MethodName="FindPaintChanged" MethodTarget="{Binding}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Code">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{Binding Color}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" Value="2,0" />
                            <Setter Property="Text" Value="{Binding ColorCode}" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Width="2*" Binding="{Binding ColorName}" Header="Name" />
                <DataGridTextColumn Width="*" Binding="{Binding Note}" Header="Note" />
                <DataGridTextColumn Binding="{Binding DeltaE, StringFormat=f2}" Header="ΔE">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Margin" Value="2,0" />
                            <Setter Property="TextAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <StatusBar Grid.Row="5" Grid.ColumnSpan="2">
            <StatusBarItem Content="{Binding Clock}" />
        </StatusBar>

    </Grid>
</Window>
